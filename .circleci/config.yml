version: 2.1

orbs:
  win: circleci/windows@2.4.0

defaults: &defaults
  docker:
    - image: cimg/node:23.3

workspace_root: &workspace_root
  /tmp/tubee-cli

attach_workspace: &attach_workspace
  attach_workspace:
    at: *workspace_root

jobs:
  build_linux:
    <<: *defaults
    working_directory: *workspace_root
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: npm update
          command: npm update
      - run:
          name: set version
          command:  |
            if [ -z "${CIRCLE_TAG}"];
            then
              version=$CIRCLE_BUILD_NUM;
            else
              version=$CIRCLE_TAG;
              if [ "${version:0:1}" == "v" ]; then version=${CIRCLE_TAG:1}; fi;
              if [ "${version}" == "" ]; then version=${CIRCLE_BUILD_NUM}; fi;
            fi;
      - run:
          name: build
          command: |
            npm run build
            npm run dist-linux
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
#      - run:
#          name: bintray
#          command: |
#            if [ -z "${CIRCLE_TAG}"];
#            then
#              if [ "$CIRCLE_TAG" == *"-"* ];
#              then
#                export deb_distribution=unstable;
#              else
#                export deb_distribution=stable;
#              fi;
#              if [ "$CIRCLE_BRANCH" == "master" ];
#              then
#                export deb_distribution=nightly;
#              fi;
#
#              export date=$(date +%Y-%m-%d);
#              cp /tmp/tubee-cli/packaging/debian/bintray.json
#              bintray.json; sed -i s/'{version}'/$version/g bintray.json; sed -i s/'{date}'/$date/g
#              bintray.json; sed -i s/'{deb_distribution}'/$deb_distribution/g bintray.json; make deb VERSION=$version;
#            fi;
      - store_artifacts:
          path: /tmp/tubee-cli/dist
      - persist_to_workspace:
          root: .
          paths:
            - dist/tubectl-linux-x64

  build_windows:
    executor: win/default
    working_directory: *workspace_root

    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: npm update
          command: npm update
      - run:
          name: build
          command: |
            npm run build
            npm run dist-windows
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - store_artifacts:
          path: /tmp/tubee-cli/dist
      - persist_to_workspace:
          root: .
          paths:
            - dist/tubectl-win-x64.exe

  build_osx_arm64:
    macos:
      xcode: 16.1.0
    resource_class: macos.m1.medium.gen1

    working_directory: *workspace_root

    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: npm update
          command: npm update
      - run:
          name: build
          command: |
            npm run build
            npm run dist-osx-arm64
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - store_artifacts:
          path: /tmp/tubee-cli/dist
      - persist_to_workspace:
          root: .
          paths:
            - dist/tubectl-osx-arm64

  build_osx_x64:
    macos:
      xcode: 16.1.0
    resource_class: macos.m1.medium.gen1

    working_directory: *workspace_root

    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: npm update
          command: npm update
      - run:
            name: "replace keytar.node with x64 version"
            command: |
                rm -rf node_modules/keytar/build/Release/keytar.node
                cp keytar_x64/keytar.node node_modules/keytar/build/Release/
      - run:
          name: build
          command: |
            npm run build
            npm run dist-osx-x64
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - store_artifacts:
          path: /tmp/tubee-cli/dist
      - persist_to_workspace:
          root: .
          paths:
            - dist/tubectl-osx-x64

  publish-github-release:
    docker:
      - image: cibuilds/github:0.13.0
    working_directory: *workspace_root
    steps:
      - *attach_workspace
      - run:
          name: "Publish Release on GitHub"
          command: |
            if [ "$CIRCLE_TAG" != "" ];
            then
              ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -c $CIRCLE_SHA1 $CIRCLE_TAG ./dist/
            fi;

  publish-macos-release-to-homebrew:
    docker:
      - image: cibuilds/github:0.13.0
    working_directory: *workspace_root
    steps:
      - *attach_workspace
      - add_ssh_keys:
          fingerprints:
            - "SHA256:zisxsB/ccjleyOvK/JRg+AtKyPCABqWIbheN2UD+r50"
      - run: mkdir -p ~/.ssh
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: "Publish Release on GitHub"
          command: |
            if [ "$CIRCLE_TAG" != "" ];
            then
              version=${CIRCLE_TAG:1};
              git config --global user.email "no-reply@gyselroth.net"
              git config --global user.name "circleci Build"
              git clone --depth 1 https://github.com/gyselroth/homebrew-core > /dev/null 2>&1

              sha256=$(sha256sum dist/tubectl-osx-arm64 | cut -d ' ' -f1) && echo $sha256
              sed -i 's/sha256.*$/sha256 "'$sha256'"/g' homebrew-core/Formula/tubectl.rb
              sed -i 's/version.*$/version "'$version'"/g' homebrew-core/Formula/tubectl.rb
              sed -i 's/url.*$/url "https:\/\/github.com\/gyselroth\/tubee-client-cli\/releases\/download\/'$CIRCLE_TAG'\/tubectl-osx-arm64"/g' homebrew-core/Formula/tubectl.rb

              sha256=$(sha256sum dist/tubectl-osx-x64 | cut -d ' ' -f1) && echo $sha256
              sed -i 's/sha256.*$/sha256 "'$sha256'"/g' homebrew-core/Formula/tubectl-x64.rb
              sed -i 's/version.*$/version "'$version'"/g' homebrew-core/Formula/tubectl-x64.rb
              sed -i 's/url.*$/url "https:\/\/github.com\/gyselroth\/tubee-client-cli\/releases\/download\/'$CIRCLE_TAG'\/tubectl-osx-x64"/g' homebrew-core/Formula/tubectl-x64.rb

              cd homebrew-core
              git commit --message "tubectl release arm64 $CIRCLE_TAG" Formula/tubectl.rb
              git commit --message "tubectl release x64 $CIRCLE_TAG" Formula/tubectl-x64.rb
              git remote set-url origin git@github.com:gyselroth/homebrew-core.git
              git push origin master > /dev/null 2>&1
            fi;

workflows:
  version: 2
  build-n-release:
    jobs:
      - build_linux:
          filters:
            tags:
              only: /.*/
      - build_windows:
          filters:
            tags:
              only: /.*/
      - build_osx_arm64:
          filters:
            tags:
              only: /.*/
      - build_osx_x64:
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          requires:
            - build_linux
            - build_windows
            - build_osx_arm64
            - build_osx_x64
          filters:
            tags:
              only: /^v.*/
#      - publish-macos-release-to-homebrew:
#          requires:
#            - build_osx_arm64
#            - build_osx_x64
#          filters:
#            tags:
#              only: /^v.*/
